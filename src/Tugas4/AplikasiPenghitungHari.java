/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tugas4;

import java.time.LocalDate;
import java.time.YearMonth;
import java.time.temporal.ChronoUnit;
import javax.swing.event.ChangeEvent;

/**
 *
 * @author SSD TURBO_BC
 */
public class AplikasiPenghitungHari extends javax.swing.JFrame {

   private LocalDate selectedDate;
    private LocalDate calendarDate;
    /**
     * Creates new form AplikasiPenghitungHari
     */
    public AplikasiPenghitungHari() {
        initComponents();
        selectedDate = LocalDate.now(); // Inisialisasi dengan tanggal hari ini
    calendarDate = LocalDate.now(); // Tanggal terpisah untuk JCalendar

    // Listener untuk perubahan pada JSpinner
    jtahun.addChangeListener(evt -> {
        jtahunStateChanged(evt); // Update nilai
        hitungOtomatis();        // Panggil hitung otomatis
    });

    // Listener untuk perubahan pada JComboBox
    cbbulan.addActionListener(evt -> {
        cbbulanActionPerformed(); // Update nilai
        hitungOtomatis();         // Panggil hitung otomatis
    });

    // Listener untuk perubahan pada JCalendar
    jCalendar1.getDayChooser().addPropertyChangeListener("day", evt -> {
        jCalendarChanged();      // Update nilai
        hitungOtomatis();        // Panggil hitung otomatis
    });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbbulan = new javax.swing.JComboBox<>();
        jtahun = new javax.swing.JSpinner();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        btnhitung = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Penghitung Hari");

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("APLIKASI PENGHITUNG HARI");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        jLabel2.setText("PILIH BULAN DAN TAHUN :");

        cbbulan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November" }));

        btnhitung.setText("Hitung");
        btnhitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhitungActionPerformed(evt);
            }
        });

        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbulan, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jtahun, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnhitung, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnclear, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbbulan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnhitung, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void jCalendarChanged() {
        int tahun = jCalendar1.getYearChooser().getYear();
        int bulan = jCalendar1.getMonthChooser().getMonth() + 1;
        int hari = jCalendar1.getDayChooser().getDay();

        if (hari > 0) {
            calendarDate = LocalDate.of(tahun, bulan, hari);
        }
    }

    private void cbbulanActionPerformed() {
       // Tidak mengubah JCalendar, hanya mengupdate nilai yang ditampilkan
        int tahun = (int) jtahun.getValue();
        int bulan = cbbulan.getSelectedIndex() + 1;
        selectedDate = LocalDate.of(tahun, bulan, 1);
    }

private void jtahunStateChanged(ChangeEvent evt) {
         // Tidak mengubah JCalendar, hanya mengupdate nilai yang ditampilkan
        int tahun = (int) jtahun.getValue();
        int bulan = cbbulan.getSelectedIndex() + 1;
        selectedDate = LocalDate.of(tahun, bulan, 1);
    }
    private void btnhitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhitungActionPerformed
    // Ambil tanggal dari JCalendar
        int hariDipilih = jCalendar1.getDayChooser().getDay();
        int tahunKalender = jCalendar1.getYearChooser().getYear();
        int bulanKalender = jCalendar1.getMonthChooser().getMonth() + 1;

        if (hariDipilih == 0) {
            jTextArea1.setText("Harap pilih tanggal yang valid di JCalendar.");
            return;
        }

        calendarDate = LocalDate.of(tahunKalender, bulanKalender, hariDipilih);

        // Ambil tanggal dari JSpinner dan JComboBox
        int tahunDipilih = (int) jtahun.getValue();
        int bulanDipilih = cbbulan.getSelectedIndex() + 1;
        selectedDate = LocalDate.of(tahunDipilih, bulanDipilih, 1);

        // Hitung jumlah hari dalam bulan yang dipilih
        int jumlahHari = YearMonth.of(tahunDipilih, bulanDipilih).lengthOfMonth();
        LocalDate tanggalTerakhir = LocalDate.of(tahunDipilih, bulanDipilih, jumlahHari);

        // Menentukan apakah tahun tersebut adalah tahun kabisat
        boolean tahunKabisat = (tahunDipilih % 4 == 0 && (tahunDipilih % 100 != 0 || tahunDipilih % 400 == 0));

        // Hitung selisih hari dari `calendarDate` hingga `selectedDate`
        long selisihHari = ChronoUnit.DAYS.between(calendarDate, tanggalTerakhir);

        // Menampilkan hasil pada jTextArea1
        jTextArea1.setText("Jumlah hari di bulan " + cbbulan.getSelectedItem() + " " + tahunDipilih + ": " + jumlahHari + "\n");
        jTextArea1.append("Hari pertama: " + LocalDate.of(tahunDipilih, bulanDipilih, 1).getDayOfWeek() + "\n");
        jTextArea1.append("Hari terakhir: " + tanggalTerakhir.getDayOfWeek() + "\n");
        jTextArea1.append("Tahun " + tahunDipilih + (tahunKabisat ? " adalah tahun kabisat.\n" : " bukan tahun kabisat.\n"));
        jTextArea1.append("Selisih hari dari tanggal yang dipilih di kalender hingga akhir bulan: " + Math.abs(selisihHari) + " hari\n");
    }//GEN-LAST:event_btnhitungActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
     jTextArea1.setText("");
        jCalendar1.setDate(new java.util.Date());
        cbbulan.setSelectedIndex(0);
        jtahun.setValue(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR));
        selectedDate = LocalDate.now();
        calendarDate = LocalDate.now();
    }//GEN-LAST:event_btnclearActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AplikasiPenghitungHari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AplikasiPenghitungHari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AplikasiPenghitungHari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AplikasiPenghitungHari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AplikasiPenghitungHari().setVisible(true);
            }
        });
    }
    // Tambahkan metode untuk menghitung otomatis
private void hitungOtomatis() {
    try {
        // Ambil tanggal dari JCalendar
        int hariDipilih = jCalendar1.getDayChooser().getDay();
        int tahunKalender = jCalendar1.getYearChooser().getYear();
        int bulanKalender = jCalendar1.getMonthChooser().getMonth() + 1;

        if (hariDipilih == 0) {
            jTextArea1.setText("Harap pilih tanggal yang valid di JCalendar.");
            return;
        }

        calendarDate = LocalDate.of(tahunKalender, bulanKalender, hariDipilih);

        // Ambil tanggal dari JSpinner dan JComboBox
        int tahunDipilih = (int) jtahun.getValue();
        int bulanDipilih = cbbulan.getSelectedIndex() + 1;
        selectedDate = LocalDate.of(tahunDipilih, bulanDipilih, 1);

        // Hitung jumlah hari dalam bulan yang dipilih
        int jumlahHari = YearMonth.of(tahunDipilih, bulanDipilih).lengthOfMonth();
        LocalDate tanggalTerakhir = LocalDate.of(tahunDipilih, bulanDipilih, jumlahHari);

        // Menentukan apakah tahun tersebut adalah tahun kabisat
        boolean tahunKabisat = (tahunDipilih % 4 == 0 && (tahunDipilih % 100 != 0 || tahunDipilih % 400 == 0));

        // Hitung selisih hari dari `calendarDate` hingga `selectedDate`
        long selisihHari = ChronoUnit.DAYS.between(calendarDate, tanggalTerakhir);

        // Menampilkan hasil pada jTextArea1
        jTextArea1.setText("Jumlah hari di bulan " + cbbulan.getSelectedItem() + " " + tahunDipilih + ": " + jumlahHari + "\n");
        jTextArea1.append("Hari pertama: " + LocalDate.of(tahunDipilih, bulanDipilih, 1).getDayOfWeek() + "\n");
        jTextArea1.append("Hari terakhir: " + tanggalTerakhir.getDayOfWeek() + "\n");
        jTextArea1.append("Tahun " + tahunDipilih + (tahunKabisat ? " adalah tahun kabisat.\n" : " bukan tahun kabisat.\n"));
        jTextArea1.append("Selisih hari dari tanggal yang dipilih di kalender hingga akhir bulan: " + Math.abs(selisihHari) + " hari\n");
    } catch (Exception e) {
        jTextArea1.setText("Terjadi kesalahan: " + e.getMessage());
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnhitung;
    private javax.swing.JComboBox<String> cbbulan;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JSpinner jtahun;
    // End of variables declaration//GEN-END:variables
}
